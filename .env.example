# Discord Configuration
# Required: Your Discord bot token from the Discord Developer Portal
DISCORD_TOKEN=your_discord_token_here

# Required: Your Discord application (client) ID from the Discord Developer Portal
APPLICATION_ID=your_application_id_here

# OpenAI Configuration
# Optional: Your OpenAI API key for AI-powered responses
# If not provided, the bot will use fallback generic replies instead
OPENAI_API_KEY=your_openai_api_key_here

# Application Configuration
# Optional: Set to "production" for production environments, defaults to "development"
NODE_ENV=development

# Optional: Maximum number of messages to track per guild for AI context (default: 20)
MAX_MESSAGE_LIMIT=20

## Database Configuration
# The application reads database configuration from DB_* environment variables.
# Defaults are for a local SQLite in-memory database which is convenient for
# development. To persist a local development DB set `DB_STORAGE` to a file
# path (for example `DB_STORAGE=./data/dev.db`).

# Dialect/engine to use. Defaults to `sqlite`. Other examples: `mysql`, `postgres`.
# DB_DIALECT=sqlite

# For sqlite only: storage path. Use `:memory:` for an in-memory DB (default),
# or set a relative path to persist locally.
# DB_STORAGE=:memory:

# SQL dialects (MySQL/Postgres) connection settings (only required if DB_DIALECT is not sqlite)
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=amano
# DB_USER=root
# DB_PASSWORD=

# Optional: when true, forces sequelize.sync() to drop and recreate tables.
# Use with caution (not recommended in production).
# DB_FORCE_SYNC=false
